{"version":3,"sources":["config.js","container/hourly/hourlyForecast.js","container/daily/dailyForecast.js","container/mainComponent.js","App.js","index.js"],"names":["config","apiUrl","apiUrlSecond","apiUrlThird","HourlyForecast","fivedays","className","list","map","day","key","dt","Date","toLocaleString","month","hour","minute","Math","ceil","main","temp","alt","src","weather","icon","DailyForecast","dailyweather","daily","Container","city","useState","current","setCurrent","whichCity","setCity","setFiveDaysWeather","dailyWeather","setDailyWeather","loading","setLoading","configs","lon","lat","APPID","esc","encodeURIComponent","params","q","units","lang","params2","query2","Object","keys","k","join","query","getCity","document","getElementById","value","trim","fetcha","options","a","fetch","resp","ok","console","log","json","useEffect","handler","alert","coord","params3","exclude","query3","test","clouds","override","css","mainClouds","translateClouds","type","id","onKeyPress","e","onClick","name","size","color","feels_like","description","wind","speed","exact","to","activeClassName","path","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.20bbdc81.chunk.js","sourcesContent":["const config = {\n  apiUrl: \"https://api.openweathermap.org/data/2.5/weather\",\n  apiUrlSecond: \"https://api.openweathermap.org/data/2.5/forecast\",\n  apiUrlThird: \"https://api.openweathermap.org/data/2.5/onecall\",\n};\nexport default config;\n","import React from \"react\";\n\nimport \"./hourlyForecast.scss\";\nconst HourlyForecast = ({ fivedays }) => {\n  return (\n    <section className=\"different-days-block\">\n      <div className=\"block-scroll-wrapper\">\n        <div className=\"block-scroll\">\n          {fivedays &&\n            fivedays.list.map((day) => (\n              <div key={day.dt} className=\"day-block\">\n                <div>\n                  <p>\n                    {new Date(day.dt * 1000).toLocaleString(\"ru\", {\n                      month: \"long\",\n                      day: \"numeric\",\n                      hour: \"numeric\",\n                      minute: \"numeric\",\n                    })}\n                  </p>\n                  <p>{Math.ceil(`${day.main.temp}`)}°</p>\n                </div>\n                <img\n                  alt=\"\"\n                  className=\"weather-block-img\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default HourlyForecast;\n","import React from \"react\";\n\nimport \"./dailyForecast.scss\";\nconst DailyForecast = ({ dailyweather }) => {\n  return (\n    <section className=\"different-days-block\">\n      <div className=\"block-scroll-wrapper\">\n        <div className=\"block-scroll\">\n          {dailyweather &&\n            dailyweather.daily.map((day) => (\n              <div key={day.dt} className=\"day-block\">\n                <div>\n                  <p>\n                    {new Date(day.dt * 1000).toLocaleString(\"ru\", {\n                      month: \"long\",\n                      day: \"numeric\",\n                    })}\n                  </p>\n                  <p>{Math.ceil(`${day.temp.day}`)}°</p>\n                </div>\n                <img\n                  className=\"weather-block-img\"\n                  alt=\"\"\n                  src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    </section>\n  );\n};\nexport default DailyForecast;\n\n//\n\n// <form id=\"form-form\">\n// id=\"name-input\"\n// id=\"email-input\"\n// id=\"question-input\"\n\n// <button\n// onclick=\"onSubmit\"\n// class=\"form-wrap__btn btn-primary g-recaptcha\"\n// data-sitekey=\"6LeBkdsZAAAAABW9Lmiq7r-gOZ9r9U3P2VCmZRts\"\n// data-callback=\"onSubmit\"\n// data-action=\"submit\"\n// type=\"submit\"\n// >\n// Отправить\n// </button>\n\n// <script src=\"https://www.google.com/recaptcha/api.js\"></script>\n// <script>\n//   async function onSubmit(token) {\n//     const form = document.getElementById(\"form-form\");\n//     const name = document.getElementById(\"name-input\").value;\n//     const email = document.getElementById(\"email-input\").value;\n//     const question = document.getElementById(\"question-input\").value;\n\n//     console.log(token);\n//     const formData = {\n//       name,\n//       email,\n//       text: question,\n//       recaptchaResponse: token,\n//     };\n\n//     console.log(JSON.stringify(formData));\n\n//     const response = await fetch(\"https://test.lift.wilix.dev/landing/feedback\", {\n//       method: \"POST\",\n\n//       body: JSON.stringify(formData),\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n//     form.submit();\n//   }\n// </script>\n","import React, { useEffect, useState } from \"react\";\nimport config from \"../config\";\nimport HourlyForecast from \"./hourly/hourlyForecast\";\nimport { NavLink } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { css } from \"@emotion/core\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport DailyForecast from \"./daily/dailyForecast\";\nimport \"../container/mainComponent.scss\";\n\nconst Container = () => {\n  const [current, setCurrent] = useState();\n  const [whichCity, setCity] = useState(\"Краснодар\");\n  const [fivedays, setFiveDaysWeather] = useState();\n  const [dailyWeather, setDailyWeather] = useState();\n  const [loading, setLoading] = useState(true);\n  let configs = config;\n  let temp;\n  let city;\n  let lon = current && current.lon;\n  let lat = current && current.lat;\n  const APPID = \"5f892c8a0b4c47ee1b455fa5bbc9851f\";\n\n  const esc = encodeURIComponent;\n\n  let params = { APPID, q: `${whichCity}`, units: \"metric\", lang: \"ru\" };\n\n  let params2 = { APPID, units: \"metric\", q: `${whichCity}`, lang: \"ru\" };\n\n  let query2 =\n    \"?\" +\n    Object.keys(params2)\n      .map((k) => esc(k) + \"=\" + esc(params2[k]))\n      .join(\"&\");\n\n  let query =\n    \"?\" +\n    Object.keys(params)\n      .map((k) => esc(k) + \"=\" + esc(params[k]))\n      .join(\"&\");\n\n  const getCity = () => {\n    city = document.getElementById(\"input\").value.trim();\n\n    setCity(city);\n\n    document.getElementById(\"input\").value = \"\";\n  };\n\n  useEffect(() => {\n    async function test() {\n      const handler = await fetcha(`${configs.apiUrl}${query}`);\n      if (!handler) {\n        alert(\"type a correct city\");\n        return;\n      } else {\n        setCurrent(handler);\n        setFiveDaysWeather(await fetcha(`${configs.apiUrlSecond}${query2}`));\n\n        lon = handler.coord.lon;\n        lat = handler.coord.lat;\n        let params3 = { APPID, lat, lon, units: \"metric\", exclude: \"hourly\" };\n        let query3 =\n          \"?\" +\n          Object.keys(params3)\n            .map((k) => esc(k) + \"=\" + esc(params3[k]))\n            .join(\"&\");\n\n        if (!dailyWeather) {\n          setDailyWeather(await fetcha(`${configs.apiUrlThird}${query3}`));\n        }\n      }\n    }\n\n    test();\n  }, [whichCity]);\n\n  async function fetcha(options) {\n    setLoading(true);\n\n    const resp = await fetch(options);\n    if (!resp.ok) {\n      console.log(resp);\n      setLoading(false);\n      return false;\n    }\n\n    setLoading(false);\n    const json = await resp.json();\n    return json;\n  }\n  const override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: red;\n  `;\n  let clouds;\n  const translateClouds = () => {\n    let mainClouds = current && current.weather[0].main;\n    if (mainClouds === \"Clouds\") {\n      clouds = \"Облачно\";\n    } else if (mainClouds === \"Rain\") {\n      clouds = \"Дождь\";\n    } else if (mainClouds === \"Clear\") {\n      clouds = \"Солнечно\";\n    } else {\n      clouds = mainClouds;\n    }\n  };\n  translateClouds();\n  return (\n    <div className=\"App\">\n      <div className=\"main-container\">\n        <div className=\"search-place\">\n          <input type=\"text\" className=\"city-input\" id=\"input\" onKeyPress={(e) => e.key === \"Enter\" && getCity()} />\n          <input type=\"button\" className=\"city-button\" value=\"&#128269;\" onClick={getCity} />\n          <p>город: {current && current.name}</p> {/*  CITY IS HERE */}\n          <div className={loading ? \"sweet-loading-show\" : \"sweet-loading\"}>\n            <SyncLoader css={override} size={10} color={\"#ffffff\"} />\n          </div>\n        </div>\n\n        <div className=\"wrapper\">\n          {current ? (\n            <div>\n              <div className=\"main-info\">\n                <div>\n                  <div className=\"temp\"> {Math.ceil(current.main.temp)}°</div>{\" \"}\n                  <p>По ощущениям: {Math.ceil(current.main.feels_like)} °</p>{\" \"}\n                </div>\n                <br />\n                <br />\n                <div className=\"clouds\">\n                  <h1> {clouds}</h1>\n                 <p> {current && current.weather[0].description} </p>\n                </div>\n                <br />\n                <img\n                  className=\"weather-img\"\n                  alt={current.weather[0].description}\n                  src={`http://openweathermap.org/img/wn/${current.weather[0].icon}@2x.png`}\n                />\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <br />\n        </div>\n        <div className=\"down\">\n          <div className=\"coords\">\n            широта {current && current.coord.lon} <br />\n            долгота {current && current.coord.lat}\n            <br />\n            ветер {current && current.wind.speed}мс/c\n            <br />\n            \n          </div>\n          <div>\n            <div className=\"btn-wrapper\">\n              <NavLink exact to=\"/\" activeClassName=\"active\" className=\"day-btn\">\n                почасовой\n              </NavLink>\n              <NavLink to=\"/old\" activeClassName=\"active\" className=\"day-btn\">\n                по дням\n              </NavLink>\n            </div>\n            <Switch>\n              <Route exact path=\"/\">\n                <HourlyForecast params={params2} temp={temp} fivedays={fivedays} />\n              </Route>\n              <Route path=\"/old\">\n                <DailyForecast dailyweather={dailyWeather} />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./container/mainComponent\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App /> \n    </Router>\n \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}